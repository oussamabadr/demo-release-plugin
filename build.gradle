import sun.tools.jar.CommandLine

plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'net.researchgate.release' version '2.8.1'
	id 'java'
}

sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

release {
//	pushReleaseVersionBranch = 'release'
	git {
		requireBranch = ''
	}
}



//task mergeReleaseToMaster() {
//	description "Merge [release] branch to [master]"
//	exec {
//		workingDir '.'
//		commandLine 'echo', 'Merge to master...'
//		commandLine  'sh', '-c', 'git checkout master'
//		commandLine  'sh', '-c', 'git merge release'
//		commandLine  'sh', '-c', 'git push origin master'
//		commandLine 'echo', 'Merge to master...OK'
//	}
//}
//
//mergeReleaseToMaster.dependsOn release
//
//def getGitCommand = { ->
//	def stdout = new ByteArrayOutputStream()
//	exec {
//		commandLine 'git', 'log','--date=local','--name-status','--after="2018.07.19"'
//		standardOutput = stdout
//	}
//	return stdout.toString().trim()
//}
//
//task prinGitLog{
//	def stdout = new ByteArrayOutputStream()
//	exec {
////		commandLine 'git', 'log','--date=local','--name-status','--after="2018.07.19"'
//		commandLine "git", "checkout", "master"
////		commandLine "git", "merge", "release"
//		standardOutput = stdout
//	}
//	print stdout.toString().trim()
//}

gradle.taskGraph.whenReady {
	gradle.taskGraph.allTasks[-1] {
		doLast {
			println 'finished'
		}

	}
}
